"use strict"

const expect = require("chai").expect
const commandPrompt = require("../modules/commandPrompt")

const game = JSON.parse(
	`{ "commands": [
		"banksize 7500",
		"MIKKO cash 400",
		"NOOA cash 400",
		"AAPO cash 400",
		"HANNU cash 400",
		"MIKKO cash -180",
		"HANNU cash -180",
		"AAPO cash -100",
		"NOOA cash -100",
		"PRR float 0",
		"PRR buy 10 PRR",
		"NOOA buy 2 PRR @70 from PRR",
		"GT float 0",
		"GT buy 10 GT",
		"AAPO buy 2 GT @60 from GT",
		"IC float 80",
		"IC buy 10 IC",
		"HANNU buy 2 IC @80 from IC",
		"MIKKO buy 1 GT @60 from GT",
		"NOOA buy 1 PRR @70 from PRR",
		"AAPO buy 1 GT @60 from GT",
		"HANNU buy 1 GT @60 from GT",
		"MIKKO buy 1 GT @60 from GT",
		"NOOA buy 1 GT @60 from GT",
		"AAPO buy 1 GT @60 from GT",
		"MIKKO buy 1 IC @80 from IC",
		"MIKKO cash 15",
		"AAPO cash 20",
		"NOOA cash 30",
		"MIKKO cash 30",
		"HANNU cash 20",
		"GT cash -40",
		"GT cash -160",
		"PRR cash -40",
		"NOOA cash 40",
		"PRR cash -40",
		"PRR cash -80",
		"IC give 80 to HANNU",
		"IC cash -20",
		"IC cash -40",
		"IC cash -160",
		"MIKKO cash 15",
		"NOOA cash 15",
		"AAPO cash 20",
		"MIKKO cash 30",
		"HANNU cash 20",
		"IC dividend 11",
		"PRR sell 1 PRR @60",
		"PRR cash -60",
		"PRR cash -20",
		"PRR dividend 4",
		"GT give 30 to MIKKO",
		"GT give 40 to AAPO",
		"GT cash -80",
		"GT cash -40",
		"GT cash -80",
		"GT dividend 16",
		"NOOA buy 1 GT @80 from GT",
		"AAPO buy 1 GT @80 from GT",
		"HANNU buy 1 IC @80 from IC",
		"NYC float 0",
		"NYC buy 10 NYC",
		"MIKKO buy 2 NYC @90 from NYC",
		"NOOA buy 1 PRR @60",
		"AAPO buy 1 NYC @90 from NYC",
		"HANNU buy 1 PRR @60 from PRR",
		"MIKKO cash 30",
		"NOOA cash 15",
		"AAPO cash 10",
		"HANNU cash 30",
		"NYC give 60 to MIKKO",
		"NYC cash 70",
		"NYC dividend 6",
		"NYC sell 1 NYC @90",
		"NYC cash -6",
		"NYC cash -360",
		"GT cash -20",
		"GT dividend 16",
		"HANNU cash 40",
		"IC cash -40",
		"IC cash 30",
		"IC cash -20",
		"IC dividend 18",
		"IC cash -160",
		"PRR sell 1 PRR @60",
		"PRR cash -20",
		"PRR dividend 6",
		"PRR cash -160",
		"NOOA cash 15",
		"AAPO cash 10",
		"GT cash -20",
		"GT dividend 16",
		"GT cash -160",
		"IC cash -20",
		"IC dividend 29",
		"NYC sell 1 NYC @90",
		"NYC cash -80",
		"NYC cash -40",
		"NYC dividend 33",
		"PRR dividend 19",
		"MIKKO buy 1 NYC @124",
		"NOOA buy 1 NYC @124",
		"AAPO buy 1 NYC @124 from NYC",
		"HANNU buy 1 IC @124 from IC",
		"MIKKO buy 1 NYC @124 from NYC",
		"AAPO buy 1 NYC @124 from NYC",
		"HANNU buy 1 NYC @124 from NYC",
		"HANNU sell 1 PRR @90",
		"HANNU buy 1 NYC @124 from NYC",
		"NOOA cash 15",
		"AAPO cash 10",
		"NYC dividend 34",
		"NYC cash -500",
		"IC cash -80",
		"IC dividend 38",
		"IC cash -450",
		"GT cash 290",
		"PRR cash -80",
		"PRR dividend 30",
		"NYC cash -60",
		"NYC dividend 57",
		"IC dividend 36",
		"GT cash 130",
		"PRR sell 1 PRR @100",
		"PRR cash 250",
		"PRR cash -450",
		"MIKKO buy 1 IC @195 from IC",
		"NOOA buy 1 PRR @100",
		"AAPO sell 4 GT @100",
		"AAPO buy 1 IC @195 from IC",
		"HANNU buy 1 IC @195 from IC",
		"MIKKO buy 1 IC @195 from IC",
		"NOOA sell 1 GT @90",
		"NOOA buy 1 PRR @100",
		"AAPO buy 1 IC @195 from IC",
		"HANNU buy 1 PRR @100",
		"B&O float 0",
		"B&O buy 10 B&O",
		"NOOA buy 2 B&O @90 from B&O",
		"AAPO buy 1 PRR @100 from PRR",
		"HANNU buy 1 B&O @90 from B&O",
		"AAPO buy 1 B&O @90 from B&O",
		"HANNU buy 1 B&O @90 from B&O",
		"AAPO buy 1 PRR @100 from PRR",
		"NYC dividend 61",
		"NYC cash -20",
		"IC cash -20",
		"IC dividend 40",
		"PRR cash -40",
		"PRR dividend 44",
		"B&O sell 1 B&O @90",
		"B&O cash -40",
		"B&O cash -500",
		"GT cash -80",
		"GT cash 150",
		"GT give 490 to NYC",
		"NYC halfdividend 360",
		"NYC cash -800",
		"IC cash -20",
		"IC dividend 41",
		"IC cash -900",
		"PRR cash -60",
		"PRR dividend 44",
		"B&O sell 2 B&O @80",
		"B&O cash -120",
		"B&O dividend 27",
		"GT cash 530",
		"GT cash -532",
		"MIKKO cash -268",
		"HANNU buy 1 B&O @112 from B&O",
		"MIKKO buy 1 GT @60",
		"NOOA buy 1 B&O @112",
		"AAPO buy 1 B&O @112",
		"HANNU buy 1 B&O @112 from B&O",
		"MIKKO buy 1 GT @60",
		"NOOA buy 1 B&O @112",
		"AAPO buy 1 GT @60",
		"HANNU buy 1 GT @60",
		"MIKKO buy 1 GT @60",
		"C&O float 0",
		"C&O buy 10 C&O",
		"NOOA buy 2 C&O @150 from C&O",
		"AAPO buy 1 PRR @180 from PRR",
		"MIKKO buy 1 C&O @150 from C&O",
		"NOOA sell 1 GT @60",
		"NOOA buy 1 C&O @150 from C&O",
		"AAPO buy 1 GT @60",
		"AAPO buy 1 C&O @150 from C&O",
		"NYC cash -20",
		"NYC dividend 60",
		"IC cash -100",
		"IC cash -20",
		"IC dividend 49",
		"PRR cash -80",
		"PRR dividend 29",
		"C&O sell 1 C&O @150",
		"C&O cash -900",
		"B&O cash -20",
		"B&O cash -80",
		"B&O dividend 28",
		"GT halfdividend 290",
		"NYC dividend 62",
		"NYC cash -20",
		"IC cash -20",
		"IC dividend 62",
		"PRR cash -20",
		"PRR dividend 32",
		"B&O cash -20",
		"B&O dividend 31",
		"C&O dividend 23",
		"GT cash -40",
		"GT dividend 41",
		"AAPO sell 1 B&O @0",
		"AAPO sell 1 C&O @0",
		"HANNU sell 1 GT @124",
		"HANNU buy 1 B&O @180",
		"MIKKO buy 1 GT @124",
		"NYC cash -20",
		"NYC dividend 63",
		"IC cash -20",
		"IC dividend 71",
		"PRR cash -20",
		"PRR dividend 32",
		"B&O cash -20",
		"B&O dividend 31",
		"C&O cash -40",
		"C&O dividend 42",
		"GT dividend 41",
		"NYC dividend 63",
		"IC dividend 72",
		"PRR dividend 32",
		"B&O cash -80",
		"B&O dividend 31",
		"C&O dividend 31",
		"GT dividend 31",
		"NYC value 475",
		"IC value 475",
		"PRR value 295",
		"B&O value 230",
		"C&O value 195",
		"GT value 180"
	]}`.trim()
)

describe("Sample game", () => {
	it("should print out correct results", () => {
		commandPrompt._updateGameState(game.commands)
		const gameState = commandPrompt._getGameState()
		const values = gameState.getValuesTable()
		/*
		expect(values[1]).to.deep.equal([
			"MIKKO",
			2481,
			0,
			1080,
			1900,
			0,
			195,
			1425,
			7081
		])
		expect(values[2]).to.deep.equal([
			"NOOA",
			1530,
			1770,
			0,
			475,
			460,
			585,
			0,
			4820
		])
		expect(values[3]).to.deep.equal([
			"AAPO",
			2262,
			885,
			540,
			1425,
			230,
			0,
			950,
			6292
		])
		expect(values[4]).to.deep.equal([
			"HANNU",
			2993,
			295,
			180,
			950,
			1150,
			0,
			2375,
			7943
		])
*/
		const holdings = gameState.getHoldingsTable()

		expect(holdings[1]).to.deep.equal(["NOOA", 1530, 6, 0, 1, 2, 3, 0])
		expect(holdings[2]).to.deep.equal(["AAPO", 2262, 3, 3, 3, 1, 0, 2])
		expect(holdings[3]).to.deep.equal(["HANNU", 2993, 1, 1, 2, 5, 0, 5])
		expect(holdings[4]).to.deep.equal(["MIKKO", 2481, 0, 6, 4, 0, 1, 3])
	})
})
